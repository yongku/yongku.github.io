<!DOCTYPE html>
<html lang="ko">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<!-- <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no" /> -->
	<!--아이폰이나 아이패드나 혹은 블래베리라거나 자동적으로 전화번호나 이메일 주소를 감지하고 링크가 되어버리는 경우-->
	<meta name="format-detection" content="telephone=no, address=no, email=no, date=no">
	<!--<meta name="format-detection" content="no" /> 이렇게 전부 포맷 감지 기능을 꺼버리는 방법도 있음.-->
	<meta http-equiv="X-UA-Compatible" content="ie=edge">
	<title>01 css 선택자</title>
	<!-- <link rel="shortcut icon" type="image/x-icon" href="favicon.ico"> -->
	<link rel="stylesheet" type="text/css" href="css/reset.css">
	<!-- <script type="text/javascript" src="js/jquery/jquery-1.9.1.min.js"></script>
	<script type="text/javascript" src="js/jquery/jquery-1.11.1.min.js"></script>
	<script type="text/javascript" src="js/jquery/jquery-1.11.2.min.js"></script> -->
	<!-- <script type="text/javascript" src="js/jquery/jquery-3.3.1.min.js"></script> -->
	<script type="text/javascript" src="js/jquery/jquery-1.12.4.min.js"></script>
	<script type="text/javascript" src="js/jquery/jquery.easing.min.js"></script>
	<!-- 바운스 효과 -->

	<!-- jQuery를 항상 최신버전을 사용 할 수 있는방법입니다. -->
	<!-- <script src="//code.jquery.com/jquery-latest.min.js"></script>  -->
</head>
<body>
	<!--
		.css()
		css 메서드는 CSS 속성값을 읽어오거나 지정합니다.

		.width()
		width 메소드는 지정된 요소의 너비를 지정하거나 가져옵니다.
		$( 셀렉터 ).width( 값 )  -  셀렉터에 해당하는 요소의 너비 값을 지정

		.height()
		height 메소드는 지정된 요소의 높이를 지정하거나 가져옵니다.
		$( 셀렉터 ).height( 값 )  -  셀렉터에 해당하는 요소의 높이 값을 지정

		.innerWidth()
		innerWidth 메소드는 안쪽 너비를 알아냅니다. (width + padding 값)
		$( 셀렉터 ).innerWidth()  -  셀렉터에 해당하는 요소의 안쪽 너비를 알아냅니다.
		- 지정된 width 와 padding 의 값을 포함합니다.
		- margin 과 border 두께값은 포함하지 않습니다.

		.innerHeight()
		innerHeight 메소드는 안쪽 높이를 알아냅니다. (height + padding 값)
		$( 셀렉터 ).innerHeight()  -  셀렉터에 해당하는 요소의 안쪽 높이를 알아냅니다.
		- 지정된 height 와 padding 의 값을 포함합니다.
		- margin 과 border 두께값은 포함하지 않습니다.

		.outerWidth()
		outerWidth 메소드는 다른 CSS 값을 포함한 너비를 알아냅니다.
		.outerWidth( true )  -  true 옵션을 사용하면 margin 까지 포함한 너비를 알아냅니다.

		.outerHeight()
		outerHeight 메소드는 다른 CSS 값을 포함한 높이를 알아냅니다.
		.outerHeight( true )  -  true 옵션을 사용하면 margin 까지 포함한 높이를 알아냅니다.

		.addClass()
		addClass 메소드는 요소에 클래스를 추가합니다.
		$('.css_test img').addClass('추가될 클래스 이름')

		.toggleClass()
		toggleClass 는 실행시 마다 지정된 클래스를 적용, 해제 합니다
		적용된 상태에서 실행하면 해제. 해제된 상태에서 실행하면 적용

		.hasClass()
		hasClass 메서드는 지정한 대상에 CSS 클래스가 적용되어 있는지 확인합니다.
		지정한 클래스가 있으면 true 없다면 false 가 반환됩니다.
		$('요소').hasClass('클래스명')

		.removeClass()
		removeClass 메소드는 요소에 적용된 클래스를 제거합니다.

		.position()
		position 메소드는 지정한 요소의 부모 요소를 기준으로 top, left 위치를 알아냅니다.
		- offset 메서드는 문서를 기준으로 값을 가져옵니다.
		- 부모요소를 기준으로 값을 알고 싶을땐 position (상대적 위치값)
		- 문서를 기준으로 값을 알고 싶을땐 offset (절대적 위치값)
		$( 셀렉터 ).position()  -  셀렉터에 해당하는 요소의 부모를 기준으로 top, left 값을 알아냅니다.
		$( 셀렉터 ).position().top  -  top 위치값 가져오기
		$( 셀렉터 ).position().left  -  left 위치값 가져오기
		이렇게 변수화 해서 사용하면 편합니다.
		var pos = $( 셀렉터 ).position();
		alert( '이미지의 position - left:' + pos.left + ', top:' + pos.top )

		.offset()
		offset 메소드는 요소의 위치정보를 가져옵니다.
		- $( 셀렉터 ).offset()  -  해당 셀렉터 요소의 top, left 위치값을 알아냅니다.
		- 값은 객체 형태로 반환됩니다.
		$( 셀렉터 ).offset()  -  해당 셀렉터 요소의 top, left 위치값을 알아냅니다.
		- 값은 객체 형태로 반환됩니다.

		.scrollTop()
		$( 셀렉터 ).offset().top  -  top 값

		.scrollLeft()
		$( 셀렉터 ).offset().left  -  left 값

		ex)위로가기 버튼
		$(document).on('scroll', function(){
			if ($(window).scrollTop() > 500) {
				$('.sctopbtn').addClass('show');
			} else {
				$('.sctopbtn').removeClass('show');
			}
		});
		$('요소명').on('click', function () {
			$('html,body').animate({
				scrollTop: 0
			}, 100);
			return false;
		});
	-->
</body>
</html>
<!DOCTYPE html>
<html lang="ko">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="format-detection" content="telephone=no, address=no, email=no, date=no">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">
	<title>06 jvascript - 배열(Array))</title>
	<link rel="shortcut icon" type="image/x-icon" href="favicon.ico">
	<link rel="stylesheet" type="text/css" href="css/reset.css">
	<script type="text/javascript" src="js/jquery/jquery-1.12.4.min.js"></script>
	<script type="text/javascript" src="js/jquery/jquery.easing.min.js"></script>
	<style>
		*{margin:0;padding:0;list-style:none;border:0;box-sizing:border-box;text-decoration: none;}
		input{width:100%;padding:10px;border:1px solid #0f0;font-size:20px;text-align:right;}
		ul{display:table;width:100%;*zoom:1;}
		li{float:left;width:50%;padding:5px;border:1px solid;}
		li:nth-child(2n+1){clear:both;}
		.calbox{width:300px;margin:0 auto;border:1px solid #000;}
		.calbox ul{display:table;width:100%;*zoom:1;}
		.calbox li{float:left; width:33.333%; padding:20px 0; text-align:center; cursor:pointer;}
		.calbox li:nth-child(2n+1){clear:none;}
		.calbox li:nth-child(3n+1){clear:both;}
		p{font-weight:600;}
		p > span{font-weight:400;color:#00f;}
	</style>
</head>
<body>
<ul>
	<li>전역변수 - 함수 밖에 선언</li>
	<li>지역변수 - 함수 안에 선언</li>
	<li>지역변수와 전역변수의 이름이 같을 경우 지역 변수가 우선순위가 높다</li>
	<li>모든 변수를 var 키워드로 선언</li>
	<li>인자 - function() 괄호안에 인자를 받음</li>
	<li>{} - 정의선언</li>
	<li>[] - 배열이 들어감</li>
	<li>상수 - 변하지 않는 수</li>
	<li>변수 - 변할 수 있는 수</li>
	<li>var num = 0(따옴표가 없는 경우는 숫자-넘버형태), var num = "0"(따옴표가 있는 경우 문자-string 형태)</li>
	<li>연산종류 :  [-(빼기) ,+(더하기), *(곱하기), /(나누기), %(나눈 나머지 값)]</li>
	<li>+ = 더한 후 대입</li>
	<li>- = 뺀후 대입</li>
	<li>* = 곱한 후 대입</li>
	<li>/ = 나눈 후 대입</li>
	<li>++ = 증가</li>
	<li>-- = 감소</li>
	<li>변수선언에는 각각 선언후 대입하는 경우와 동시에 선언후 대입하는 경우가 있음</li>
	<li>각각선언하는 경우 : var a,b,c; var a = 10, var b = 20, var c = a + b;</li>
	<li>동시에 선언하는 경우 : var a = 10, var b = 20, var c = a + b;</li>
	<li>배열을 선언하는 방식 : var arr = new Array; arr = ['배열','변수','함수']; , var arr = []; arr = ['배열','변수','함수']; 두번째 방식을 권장 둘다 방식은 같음</li>
	<li>배열에서 선언 추가 : arr.push("인자"); - push()를 활용하면 배열의 끝에 인자를 추하고 해당 배열의 길이를 반환</li>
	<li>Math 함수 - Math.cell();//올림, Math.floor();//내림, Math.random();//랜덤추출, length;//개수</li>
	<li>for - for(초기값; 조건; 증가;){반복할내용}</li>
	<li>String() - 숫자를 문자열로 명시적으로 변환하는 방법</li>
	<li>Number() - 문자열을 숫자로 변환하는 명시적이고 엄격한 방법</li>
</ul>
<div class="test">
	
</div>
<script>
$(function(){
	var name = "전역 변수";//전역 변수를 선언
	function checkName(){  
		var name = "지역 변수";//지역 변수를 선언
		//var 키워드 없이 변수를 선언하면 자동으로 전역 변수가 됨.
		//name2 = "전역 변수";//새 전역 변수가 선언
		console.log(name);//전역 변수가 아닌 지역 변수를 사용
	}
	checkName();//출력 결과: "지역 변수"  
	
	var arr = ['전역', '지역', '인자', '연산', '배열', '반복문', '조건문'];
	var arr2 = [
		'function 밖에 선언',
		'function 안에 선언',
		'function() 괄호안에 인자를 받음',
		'[-(빼기) ,+(더하기), *(곱하기), /(나누기), %(나눈 나머지 값)]',
		'배열선언방식[]',
		'반복 for(){}',
		'if(){}'
	];
	console.log(arr.length, arr2.length);
	console.log(arr.push('Math'), arr2.push('수학기능과 상수제공'))
	/*	
	for(i=0; arr.length > i; i++){
		$('.test').append('<p>' + arr[i] + '<span>' + arr2[i] + '</span>' + '</p>');
		console.log(arr[i],arr2[i]);
		
		for(k=0; arr2.length > k; k++){
			$('.test p').append('<span>' + arr2[k] + '</span>');
			console.log(arr[i],arr2[k]);
		}
		
	}*/
	
	var arr3 = [
		['전역','function 밖에 선언'],
		['지역','function 안에 선언'],
		['function()','괄호안에 인자를 받음']
	];
	
	for( i=0; i<arr3.length; i++ ){
		$('.test').append('<p>'+arr3[i][0]+'<span>'+arr3[i][1]+'</span></p>');
	}
	
	floorArr(arr);
	function floorArr(num){
		var floor = Math.floor( Math.random() * num.length );
		console.log( 'floor=', floor, arr[floor] );
	}
	
	var str1 = String("12345");
	console.log(str1);
	
	
	
	var x = 10;
	var a = x + 5; // 5를 더합니다, 답은 15
	var b = x - 5; // 5를 뺍니다, 답은 5
	var c = x * 2; // 2를 곱합니다,답은 20 
	var d = x / 4; // 4를 나눕니다, 답은 2.5
	var e = x % 4; // 4를 나누고 나머지값을 반환합니다, 답은 2
	console.log(a,b,c,d,e);
	
	
	//예습 sort
	var sortarr = [2, 1, 15];
	function sortArry(a,b){
		if (a > b) {
			return 1
		} else if (b > a) {
			return -1
		} else {
			return 0
		}
	}
	sortarr.sort(sortArry);
	console.log('sort : ' + sortarr);
	
	
	
});
</script>

</body>
</html>